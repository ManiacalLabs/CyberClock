#ifndef CHAR_H
#define CHAR_H

#define CHAR_OFFSET 32
#define NUM_START_OFFSET 16
const byte _chars[] = {
    0b00000000, //
    0b00000000, //!
    0b00100010, //"
    0b00000000, //#
    0b00000000, //$
    0b00000000, //%
    0b00000000, //&
    0b00000010, //'
    0b00111001, //(
    0b00001111, //)
    0b00000000, //*
    0b00000000, //+
    0b00000000, //,
    0b01000000, //-
    0b00000000, //.
    0b00000000, ///
    0b00111111, //0
    0b00000110, //1
    0b01011011, //2
    0b01001111, //3
    0b01100110, //4
    0b01101101, //5
    0b01111101, //6
    0b00000111, //7
    0b01111111, //8
    0b01101111, //9
    0b00000000, //:
    0b00000000, //;
    0b00000000, //<
    0b00000000, //=
    0b00000000, //>
    0b00000000, //?
    0b00000000, //@
    0b01110111, //A
    0b01111111, //B
    0b00111001, //C
    0b00111111, //D
    0b01111001, //E
    0b01110001, //F
    0b00111101, //G
    0b01110110, //H
    0b00000110, //I
    0b00011110, //J
    0b01110110, //K
    0b00111000, //L
    0b01010101, //M
    0b01010100, //N
    0b00111111, //O
    0b01110011, //P
    0b01100111, //Q
    0b01110111, //R
    0b01101101, //S
    0b00110001, //T
    0b00111110, //U
    0b01110010, //V
    0b01111110, //W
    0b01010010, //X
    0b01101110, //Y
    0b01011011, //Z
    0b00111001, //[
    0b00000000, // <backslash>
    0b00001111, //]
    0b00000000, //^
    0b00001000, //_
    0b00100000, //`
    0b01011111, //a
    0b01111100, //b
    0b01011000, //c
    0b01011110, //d
    0b01111011, //e
    0b01110001, //f
    0b01101111, //g
    0b01110100, //h
    0b00000100, //i
    0b00001110, //j
    0b01110100, //k
    0b00110000, //l
    0b01010101, //m
    0b01010100, //n
    0b01011100, //o
    0b01110011, //p
    0b01100111, //q
    0b01010000, //r
    0b01101101, //s
    0b01111000, //t
    0b00011100, //u
    0b01100010, //v
    0b01101010, //w
    0b01010010, //x
    0b01100110, //y
    0b01011011, //z
};

//  000
// 5   1
// 5   1
// 5   1
//  666
// 4   2
// 4   2
// 4   2
//  333

#define MATRIX_X 20
#define MATRIX_Y 9
const byte _char_matrix[MATRIX_Y][MATRIX_X] = {
    {-1,  0,  1,  2, -1,     -1, 21, 22, 23,  -1,     -1, 42, 43, 44,  -1,     -1, 63, 64, 65,  -1},
    {17, -1, -1, -1,  3,     38, -1, -1, -1,  24,     59, -1, -1, -1,  45,     80, -1, -1, -1,  66},
    {16, -1, -1, -1,  4,     37, -1, -1, -1,  25,     58, -1, -1, -1,  46,     79, -1, -1, -1,  67},
    {15, -1, -1, -1,  5,     36, -1, -1, -1,  26,     57, -1, -1, -1,  47,     78, -1, -1, -1,  68},
    {-1, 18, 19, 20, -1,     -1, 39, 40, 41,  -1,     -1, 60, 61, 62,  -1,     -1, 81, 82, 83,  -1},
    {14, -1, -1, -1,  6,     35, -1, -1, -1,  27,     56, -1, -1, -1,  48,     77, -1, -1, -1,  69},
    {13, -1, -1, -1,  7,     34, -1, -1, -1,  28,     55, -1, -1, -1,  49,     76, -1, -1, -1,  70},
    {12, -1, -1, -1,  8,     33, -1, -1, -1,  29,     54, -1, -1, -1,  50,     75, -1, -1, -1,  71},
    {-1, 11, 10,  9, -1,     -1, 32, 31,  30, -1,     -1, 53, 52,  51, -1,     -1, 74, 73,  72, -1},
};

#endif CHAR_H